{{ 'main.css' | asset_url | stylesheet_tag }}

<style>
  .banner-container {
    display: flex;
    gap: 16px;
    padding: 16px;
    overflow-x: auto;
    flex-wrap: nowrap;
    -webkit-overflow-scrolling: touch;
    margin-bottom: 16px;
  }

  .banner {
    position: relative;
    display: inline-block;
    width: 200px;
    height: 150px;
    background-color: #ddd;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
  }

  .banner video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
  }

  .banner::before {
    content: '';
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    bottom: 10px;
    background-color: rgba(255, 255, 255, 0.4);
    border-radius: 8px;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  #loading-banner {
    color: #888;
    font-size: 14px;
  }
</style>

<div class="banner-container" id="banner-container">
  <p id="loading-banner">Loading banners...</p>
</div>

<script>
  async function loadBannerFromProxy() {
    try {
      const res = await fetch('https://mobiles-berry-patent-huge.trycloudflare.com/app/proxy');
      const responseJson = await res.json();

      console.log("Full response:", responseJson);

      const banners = Array.isArray(responseJson) ? responseJson : responseJson.data || [];
      console.log("Banners array:", banners);
      console.log("Is array:", Array.isArray(banners));
      console.log("Length:", banners.length);

      const container = document.getElementById('banner-container');
      document.getElementById('loading-banner')?.remove();

      if (banners.length > 0) {
        banners.forEach((item) => {
          const bannerDiv = document.createElement('div');
          bannerDiv.className = 'banner';

          const video = document.createElement('video');
          video.src = item.url; // Ensure that item.url is the correct video URL
          video.controls = true;

          bannerDiv.appendChild(video);
          container.appendChild(bannerDiv);
        });
      } else {
        container.innerHTML = '<p>No banners found.</p>';
      }
    } catch (err) {
      console.error("Failed to load banners", err);
      document.getElementById('banner-container').innerHTML = '<p>Error loading banners.</p>';
    }
  }

  loadBannerFromProxy();
</script>

{% schema %}
{
  "name": "Banner",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Banner Title",
      "default": "Our Banners"
    }
  ]
}
{% endschema %}
